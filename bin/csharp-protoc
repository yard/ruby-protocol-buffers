#!/usr/bin/env ruby

begin
  require 'rubygems'
rescue LoadError
end

require 'optparse'
require 'tempfile'
require 'protocol_buffers/entities'

opts = OptionParser.new
opts.banner = <<BANNER
Usage: #{opts.program_name} [OPTION] PROTO_FILES
Parse PROTO_FILES and generate output based on the options given:
BANNER
opts.version = "1.0.0"

out_path = nil

opts.on("-o", "--csharp_out", "=OUT_FILE",
        "generates C# code to [OUT_FILE]", "[defaults to pwd]",
        String) { |val| out_path = val }

rest = opts.parse(ARGV)
filename = rest.first
tool_path = File.expand_path( File.join(__FILE__, "..", "protogen.exe" ) )
phoenix_include = File.expand_path( File.join(__FILE__, "..", "phoenix.proto" ) )

protocfile = Tempfile.new("csharp-protoc")
proto_file_name = protocfile.path

`protoc -I. -I#{ File.dirname(filename) } -I#{ File.dirname(phoenix_include) } -o#{ proto_file_name } #{ filename }`
if $?.exitstatus != 0
  puts "\nprotoc failed :("
  exit 1
end

`mono #{ tool_path } -i:#{ proto_file_name } -o:#{ out_path } -p:fixCase -p:abotRpc`
if $?.exitstatus != 0
  puts "\nprotogen.exe failed :("
  exit 1
end

protocfile.close(true)